// ========================================================
// Text color classes


// Text color
@mixin textColor($key, $variant: false) {
  $value: map-get($textColors, $key);
  @include variant($variant) {
    color: #{$value};
  }
}
@each $key, $value in $textColors {
  // Class name .text-{color}
  %text-#{$key} {
    @include textColor($key);
  }
  @if $generateClasses {
    .text-#{$key} {
      @extend %text-#{$key};
    }
  }
  // Class name .{variant}:text-{$color}
  @each $variant in $textColorVariants {
    %#{$variant}\:text-#{$key} {
      @include textColor($key, $variant);
    }
    @if $generateClasses {
      .#{$variant}\:text-#{$key} {
        @extend %#{$variant}\:text-#{$key};
      }
    }
  }
}


// Group hover text color
// Class name .group:hover .group-hover:text-{color}
@mixin groupHoverTextColor($key) {
  .group:hover & {
    @include textColor($key);
  }
}
@each $key, $value in $groupHoverTextColors {
  %group-hover\:text-#{$key} {
    @include groupHoverTextColor($key);
  }
  @if $generateClasses {
    .group-hover\:text-#{$key} {
      @extend %group-hover\:text-#{$key};
    }
  }
}


// Responsive text color
// @media {screen}
// Class name .{screen}:text-{color}
@each $screenKey, $screenValue in $screens {
  @include media($screenKey) {
    @each $colorKey, $colorValue in $responsiveTextColors {
      %#{$screenKey}\:text-#{$colorKey} {
        @include textColor($colorKey);
      }
      @if $generateClasses {
        .#{$screenKey}\:text-#{$colorKey} {
          @extend %#{$screenKey}\:text-#{$colorKey};
        }
      }
    }
  }
}


// ========================================================
// Background color classes

// Background color
// Class name .bg-{color}
@mixin backgroundColor($key) {
  $value: map-get($backgroundColors, $key);
  background-color: #{$value};
}
@each $key, $value in $backgroundColors {
  %bg-#{$key} {
    @include backgroundColor($key)
  }
  @if $generateClasses {
    .bg-#{$key} {
      @extend %bg-#{$key};
    }
  }
}

// Hover background color
// Class name .hover:bg-{color}
@mixin hoverBackgroundColor($key) {
  &:hover {
    @include backgroundColor($key);
  }
}
@each $key, $value in $hoverBackgroundColors {
  %hover\:bg-#{$key} {
    @include hoverBackgroundColor($key);
  }
  @if $generateClasses {
    .hover\:bg-#{$key} {
      @extend %hover\:bg-#{$key};
    }
  }
}

// Focus background color
// Class name .focus:bg-{color}
@mixin focusBackgroundColor($key) {
  &:focus {
    @include backgroundColor($key);
  }
}
@each $key, $value in $focusBackgroundColors {
  %focus\:bg-#{$key} {
    @include focusBackgroundColor($key);
  }
  @if $generateClasses {
    .focus\:bg-#{$key} {
      @extend %focus\:bg-#{$key};
    }
  }
}

// Active background color
// Class name .active:text-{color}
@mixin activeBackgroundColor($key) {
  &:active {
    @include backgroundColor($key);
  }
}
@each $key, $value in $activeBackgroundColors {
  %active\:bg-#{$key} {
    @include activeBackgroundColor($key);
  }
  @if $generateClasses {
    .active\:bg-#{$key} {
      @extend %active\:bg-#{$key};
    }
  }
}

// Group hover background color
// Class name .group:hover .group-hover:text-{color}
@mixin groupHoverBackgroundColor($key) {
  .group:hover & {
    @include backgroundColor($key);
  }
}
@each $key, $value in $groupHoverBackgroundColors {
  %group-hover\:bg-#{$key} {
    @include groupHoverBackgroundColor($key);
  }
  @if $generateClasses {
    .group-hover\:bg-#{$key} {
      @extend %group-hover\:bg-#{$key};
    }
  }
}


// Responsive background color
// @media {screen}
// Class name .{screen}:bg-{color}
@each $screenKey, $screenValue in $screens {
  @include media($screenKey) {
    @each $colorKey, $colorValue in $responsiveBackgroundColors {
      %#{$screenKey}\:bg-#{$colorKey} {
        @include backgroundColor($colorKey);
      }
      @if $generateClasses {
        .#{$screenKey}\:bg-#{$colorKey} {
          @extend %#{$screenKey}\:bg-#{$colorKey};
        }
      }
    }
  }
}



// ========================================================
// Background size classes
// Class name: .bg-{size}
@mixin backgroundSize($sizeKey) {
  $sizeValue: map-get($backgroundSizes, $sizeKey);
  background-size: $sizeValue;
}
@each $key, $value in $backgroundSizes {
  %bg-#{$key} {
    @include backgroundSize($key);
  }
  @if $generateClasses {
    .bg-#{$key} {
      @extend %bg-#{$key};
    }
  }
}
