
// Display classes

@mixin display($value, $variant: false) {
  @include variant($variant) {
    display: #{$value};
  }
}

// =====================

// .flex { display: flex }
// .inline-flex { display: inline-flex }
// â€¦
@each $key in $display {
  %#{$key} {
    @include display($key);
  }
  @if $generateClasses {
    .#{$key} {
      @extend %#{$key};
    }
  }
}


// FLEX
// ==============

// .flex-{direction}
@mixin flexDirection($key, $variant: false) {
  $value: map-get($flexDirections, $key);
  @include variant($variant) {
    flex-direction: #{$value};
  }
}
@if index($display, 'flex') or index($display, 'inline-flex') {
  @each $key, $value in $flexDirections {
    %flex-#{$key} {
      @include flexDirection($key);
    }
    @if $generateClasses {
      .flex-#{$key} {
        @extend %flex-#{$key};
      }
    }
  }
}
// .{variant}:flex-{direction}
@each $variant in $flexDirectionsVariants {
  @each $key, $value in $flexDirections {
    %#{$variant}\:flex-#{$key} {
      @include flexDirection($key, $variant);
    }
    @if $generateClasses {
      .#{$variant}\:flex-#{$key} {
        @extend %#{$variant}\:flex-#{$key};
      }
    }
  }
}
// .{screen}:flex-{direction}
@each $screenKey, $screenValue in $screens {
  @include media($screenKey) {
    @each $key, $value in $responsiveFlexDirections {
      %#{$screenKey}\:flex-#{$key} {
        @include flexDirection($key);
      }
      @if $generateClasses {
        .#{$screenKey}\:flex-#{$key} {
          @extend %#{$screenKey}\:flex-#{$key};
        }
      }
    }
  }
}


// ==============

// .flex-{wrap}
@mixin flexWrap($key, $variant: false) {
  $value: map-get($flexWrap, $key);
  @include variant($variant) {
    flex-wrap: #{$value};
  }
}
@if index($display, 'flex') or index($display, 'inline-flex') {
  @each $key, $value in $flexWrap {
    %flex-#{$key} {
      @include flexWrap($key);
    }
    @if $generateClasses {
      .flex-#{$key} {
        @extend %flex-#{$key};
      }
    }
  }
}
// .{variant}:flex-{wrap}
@each $variant in $flexWrapVariants {
  @each $key, $value in $flexWrap {
    %#{$variant}\:flex-#{$key} {
      @include flexWrap($key, $variant);
    }
    @if $generateClasses {
      .#{$variant}\:flex-#{$key} {
        @extend %#{$variant}\:flex-#{$key};
      }
    }
  }
}
// .{screen}:flex-{wrap}
@each $screenKey, $screenValue in $screens {
  @include media($screenKey) {
    @each $key, $value in $responsiveFlexWrap {
      %#{$screenKey}\:flex-#{$key} {
        @include flexWrap($key);
      }
      @if $generateClasses {
        .#{$screenKey}\:flex-#{$key} {
          @extend %#{$screenKey}\:flex-#{$key};
        }
      }
    }
  }
}


// ==============

// .items-{alignment}
@mixin flexAlignItems($key, $variant: false) {
  $value: map-get($flexAlignItems, $key);
  @include variant($variant) {
    align-items: #{$value};
  }
}
@if index($display, 'flex') or index($display, 'inline-flex') {
  @each $key, $value in $flexAlignItems {
    %items-#{$key} {
      @include flexAlignItems($key);
    }
    @if $generateClasses {
      .items-#{$key} {
        @extend %items-#{$key};
      }
    }
  }
}
// .{variant}:items-{alignment}
@each $variant in $flexAlignItemsVariants {
  @each $key, $value in $flexAlignItems {
    %#{$variant}\:items-#{$key} {
      @include flexAlignItems($key, $variant);
    }
    @if $generateClasses {
      .#{$variant}\:items-#{$key} {
        @extend %#{$variant}\:items-#{$key};
      }
    }
  }
}
// .{screen}:items-{alignment}
@each $screenKey, $screenValue in $screens {
  @include media($screenKey) {
    @each $key, $value in $responsiveFlexAlignItems {
      %#{$screenKey}\:items-#{$key} {
        @include flexAlignItems($key);
      }
      @if $generateClasses {
        .#{$screenKey}\:items-#{$key} {
          @extend %#{$screenKey}\:items-#{$key};
        }
      }
    }
  }
}

// ==============

// .self-{alignment}
@mixin flexAlignSelf($key, $variant: false) {
  $value: map-get($flexAlignSelf, $key);
  @include variant($variant) {
    align-self: #{$value};
  }
}
@if index($display, 'flex') or index($display, 'inline-flex') {
  @each $key, $value in $flexAlignSelf {
    %self-#{$key} {
      @include flexAlignSelf($key);
    }
    @if $generateClasses {
      .self-#{$key} {
        @extend %self-#{$key};
      }
    }
  }
}
// .{variant}:self-{alignment}
@each $variant in $flexAlignSelfVariants {
  @each $key, $value in $flexAlignSelf {
    %#{$variant}\:self-#{$key} {
      @include flexAlignSelf($key, $variant);
    }
    @if $generateClasses {
      .#{$variant}\:self-#{$key} {
        @extend %#{$variant}\:self-#{$key};
      }
    }
  }
}
// .{screen}:self-{alignment}
@each $screenKey, $screenValue in $screens {
  @include media($screenKey) {
    @each $key, $value in $responsiveFlexAlignSelf {
      %#{$screenKey}\:self-#{$key} {
        @include flexAlignSelf($key);
      }
      @if $generateClasses {
        .#{$screenKey}\:self-#{$key} {
          @extend %#{$screenKey}\:self-#{$key};
        }
      }
    }
  }
}

// ==============

// .justify-{position}
@mixin flexJustifyContent($key, $variant: false) {
  $value: map-get($flexJustifyContent, $key);
  @include variant($variant) {
    justify-content: #{$value};
  }
}
@if index($display, 'flex') or index($display, 'inline-flex') {
  @each $key, $value in $flexJustifyContent {
    %justify-#{$key} {
      @include flexJustifyContent($key);
    }
    @if $generateClasses {
      .justify-#{$key} {
        @extend %justify-#{$key};
      }
    }
  }
}
// .{variant}:justify-{position}
@each $variant in $flexJustifyContentVariants {
  @each $key, $value in $flexJustifyContent {
    %#{$variant}\:justify-#{$key} {
      @include flexJustifyContent($key, $variant);
    }
    @if $generateClasses {
      .#{$variant}\:justify-#{$key} {
        @extend %#{$variant}\:justify-#{$key};
      }
    }
  }
}
// .{screen}:justify-{position}
@each $screenKey, $screenValue in $screens {
  @include media($screenKey) {
    @each $key, $value in $responsiveFlexJustifyContent {
      %#{$screenKey}\:justify-#{$key} {
        @include flexJustifyContent($key);
      }
      @if $generateClasses {
        .#{$screenKey}\:justify-#{$key} {
          @extend %#{$screenKey}\:justify-#{$key};
        }
      }
    }
  }
}

// ==============

// .content-{position}
@mixin flexAlignContent($key, $variant: false) {
  $value: map-get($flexAlignContent, $key);
  @include variant($variant) {
    align-content: #{$value};
  }
}
@if index($display, 'flex') or index($display, 'inline-flex') {
  @each $key, $value in $flexAlignContent {
    %content-#{$key} {
      @include flexAlignContent($key);
    }
    @if $generateClasses {
      .content-#{$key} {
        @extend %content-#{$key};
      }
    }
  }
}
// .{variant}:content-{position}
@each $variant in $flexAlignContentVariants {
  @each $key, $value in $flexAlignContent {
    %#{$variant}\:content-#{$key} {
      @include flexAlignContent($key, $variant);
    }
    @if $generateClasses {
      .#{$variant}\:content-#{$key} {
        @extend %#{$variant}\:content-#{$key};
      }
    }
  }
}
// .{screen}:content-{position}
@each $screenKey, $screenValue in $screens {
  @include media($screenKey) {
    @each $key, $value in $responsiveFlexAlignContent {
      %#{$screenKey}\:content-#{$key} {
        @include flexAlignContent($key);
      }
      @if $generateClasses {
        .#{$screenKey}\:content-#{$key} {
          @extend %#{$screenKey}\:content-#{$key};
        }
      }
    }
  }
}


// ==============

// .flex-{size}
@mixin flexSize($key, $variant: false) {
  $value: map-get($flexSize, $key);
  @include variant($variant) {
    flex: #{$value};
  }
}
@if index($display, 'flex') or index($display, 'inline-flex') {
  @each $key, $value in $flexSize {
    %flex-#{$key} {
      @include flexSize($key);
    }
    @if $generateClasses {
      .flex-#{$key} {
        @extend %flex-#{$key};
      }
    }
  }
}
// .{variant}:flex-{size}
@each $variant in $flexSizeVariants {
  @each $key, $value in $flexSize {
    %#{$variant}\:flex-#{$key} {
      @include flexSize($key, $variant);
    }
    @if $generateClasses {
      .#{$variant}\:flex-#{$key} {
        @extend %#{$variant}\:flex-#{$key};
      }
    }
  }
}
// .{screen}:flex-{size}
@each $screenKey, $screenValue in $screens {
  @include media($screenKey) {
    @each $key, $value in $responsiveFlexSize {
      %#{$screenKey}\:flex-#{$key} {
        @include flexSize($key);
      }
      @if $generateClasses {
        .#{$screenKey}\:flex-#{$key} {
          @extend %#{$screenKey}\:flex-#{$key};
        }
      }
    }
  }
}


// ==============

// .flex-{grow}
@mixin flexGrow($key, $variant: false) {
  $value: map-get($flexGrow, $key);
  @include variant($variant) {
    @if str-index($value, 'grow') {
      flex-grow: #{$value};
    } @else {
      flex-shrink: #{$value};
    }
  }
}
@if index($display, 'flex') or index($display, 'inline-flex') {
  @each $key, $value in $flexGrow {
    %flex-#{$key} {
      @include flexGrow($key);
    }
    @if $generateClasses {
      .flex-#{$key} {
        @extend %flex-#{$key};
      }
    }
  }
}
// .{variant}:flex-{grow}
@each $variant in $flexGrowVariants {
  @each $key, $value in $flexGrow {
    %#{$variant}\:flex-#{$key} {
      @include flexGrow($key, $variant);
    }
    @if $generateClasses {
      .#{$variant}\:flex-#{$key} {
        @extend %#{$variant}\:flex-#{$key};
      }
    }
  }
}
// .{screen}:flex-{grow}
@each $screenKey, $screenValue in $screens {
  @include media($screenKey) {
    @each $key, $value in $responsiveFlexGrow {
      %#{$screenKey}\:flex-#{$key} {
        @include flexGrow($key);
      }
      @if $generateClasses {
        .#{$screenKey}\:flex-#{$key} {
          @extend %#{$screenKey}\:flex-#{$key};
        }
      }
    }
  }
}
