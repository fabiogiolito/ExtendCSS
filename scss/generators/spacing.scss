

// ======================================
// Padding

@mixin padding($spaceKey: 'default', $sideKey: 'default') {
  $sideValue: map-get($spacingSides, $sideKey);
  $spaceValue: map-get($padding, $spaceKey);
  @if $sideKey == 'default' {
    padding: #{$spaceValue};
  } @else {
    @if length($sideValue) > 1 {
      @each $value in $sideValue {
        padding-#{$value}: #{$spaceValue};
      }
    } @else {
      padding-#{$sideValue}: #{$spaceValue};
    }
  }
}

// .p{side?}-{space}
@each $spaceKey, $spaceValue in $padding {
  @if $spaceKey == 'default' {
    %p {
      @include padding($spaceKey);
    }
    @if $generateClasses {
      .p {
        @extend %p;
      }
    }
  } @else {
    %p-#{$spaceKey} {
      @include padding($spaceKey);
    }
    @if $generateClasses {
      .p-#{$spaceKey} {
        @extend %p-#{$spaceKey};
      }
    }
  }
  @each $sideKey, $sideValue in $spacingSides {
    @if $spaceKey == 'default' {
      %p#{$sideKey} {
        @include padding($spaceKey, $sideKey);
      }
      @if $generateClasses {
        .p#{$sideKey} {
          @extend %p#{$sideKey};
        }
      }
    } @else {
      %p#{$sideKey}-#{$spaceKey} {
        @include padding($spaceKey, $sideKey);
      }
      @if $generateClasses {
        .p#{$sideKey}-#{$spaceKey} {
          @extend %p#{$sideKey}-#{$spaceKey};
        }
      }
    }
  }
}


// ======================================
// Margin

@mixin margin($spaceKey: 'default', $sideKey: 'default') {
  $sideValue: map-get($spacingSides, $sideKey);
  $spaceValue: map-get($margin, $spaceKey);
  @if $sideKey == 'default' {
    margin: #{$spaceValue};
  } @else {
    @if length($sideValue) > 1 {
      @each $value in $sideValue {
        margin-#{$value}: #{$spaceValue};
      }
    } @else {
      margin-#{$sideValue}: #{$spaceValue};
    }
  }
}

// .m{side?}-{space}
@each $spaceKey, $spaceValue in $margin {
  @if $spaceKey == 'default' {
    %m {
      @include margin($spaceKey);
    }
    @if $generateClasses {
      .m {
        @extend %m;
      }
    }
  } @else {
    %m-#{$spaceKey} {
      @include margin($spaceKey);
    }
    @if $generateClasses {
      .m-#{$spaceKey} {
        @extend %m-#{$spaceKey};
      }
    }
  }
  @each $sideKey, $sideValue in $spacingSides {
    @if $spaceKey == 'default' {
      %m#{$sideKey} {
        @include margin($spaceKey, $sideKey);
      }
      @if $generateClasses {
        .m#{$sideKey} {
          @extend %m#{$sideKey};
        }
      }
    } @else {
      %m#{$sideKey}-#{$spaceKey} {
        @include margin($spaceKey, $sideKey);
      }
      @if $generateClasses {
        .m#{$sideKey}-#{$spaceKey} {
          @extend %m#{$sideKey}-#{$spaceKey};
        }
      }
    }
  }
}


// ======================================
// Negative margin

@mixin negativeMargin($spaceKey: 'default', $sideKey: 'default') {
  $sideValue: map-get($spacingSides, $sideKey);
  $spaceValue: map-get($negativeMargin, $spaceKey);
  @if $sideKey == 'default' {
    margin: -#{$spaceValue};
  } @else {
    @if length($sideValue) > 1 {
      @each $value in $sideValue {
        margin-#{$value}: -#{$spaceValue};
      }
    } @else {
      margin-#{$sideValue}: -#{$spaceValue};
    }
  }
}

// .-m{side?}-{space}
@each $spaceKey, $spaceValue in $negativeMargin {
  @if $spaceKey == 'default' {
    %-m {
      @include negativeMargin($spaceKey);
    }
    @if $generateClasses {
      .-m {
        @extend %-m;
      }
    }
  } @else {
    %-m-#{$spaceKey} {
      @include negativeMargin($spaceKey);
    }
    @if $generateClasses {
      .-m-#{$spaceKey} {
        @extend %-m-#{$spaceKey};
      }
    }
  }
  @each $sideKey, $sideValue in $spacingSides {
    @if $spaceKey == 'default' {
      %-m#{$sideKey} {
        @include negativeMargin($spaceKey, $sideKey);
      }
      @if $generateClasses {
        .-m#{$sideKey} {
          @extend %-m#{$sideKey};
        }
      }
    } @else {
      %-m#{$sideKey}-#{$spaceKey} {
        @include negativeMargin($spaceKey, $sideKey);
      }
      @if $generateClasses {
        .-m#{$sideKey}-#{$spaceKey} {
          @extend %-m#{$sideKey}-#{$spaceKey};
        }
      }
    }
  }
}
